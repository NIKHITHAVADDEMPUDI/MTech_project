name: Build, Push, and Deploy to Minikube
#hi
on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Log in to Docker Hub (or any container registry you're using)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .

    # 4. Push the Docker image to Docker Hub (or your registry)
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

    # 5. Set up Minikube with Podman driver and CRIO runtime
    - name: Set up Minikube with Podman driver and CRIO runtime
      run: |
        minikube start --driver=podman --container-runtime=crio

        kubectl config use-context minikube

    # 6. Deploy or update the deployment with the new image
    - name: Deploy or Update the Deployment on Minikube
      run: |
        # Check if deployment exists
        kubectl get deployments myapp-deployment || echo "Deployment does not exist" > result.txt

        if grep -q "Deployment does not exist" result.txt; then
          # Deployment does not exist, create a new deployment
          kubectl apply -f deployment.yaml
        else
          # Deployment exists, update the image
          kubectl set image deployment/myapp-deployment myapp=${{ secrets.DOCKER_USERNAME }}/myapp:latest --record
          
          # Trigger a redeployment by adding an annotation (this forces Kubernetes to detect a new change even with the same image tag)
          kubectl annotate deployment myapp-deployment kubernetes.io/change-cause="Updated by GitHub Actions" --overwrite
        fi

    # 7. Wait for the deployment rollout to finish
    - name: Wait for deployment rollout
      run: |
        kubectl rollout status deployment/myapp-deployment

    # 8. Expose the service (optional, if you need external access)
    - name: Expose the service
      run: |
        kubectl expose deployment myapp-deployment --type=LoadBalancer --name=myapp-service
        minikube service myapp-service

